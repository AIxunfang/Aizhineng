<template>
          <el-row>
             <div class="navigationbar"> 
               <span class="navigationname">课程资源<i class="el-icon-arrow-right" aria-hidden="true"></i>
                      课程新增
                </span>
              </div>
              <el-col :span="24">
                     <el-col :span="12" class="formvideo">
                        <el-form  label-position="top" label-width="80px" :model="formvideo" size="small" :rules="rules">
                             <el-form-item label="上传视频(只接受mp4格式)" >
                                  <el-upload
                                     class="avatar-uploader"
                                     action="http://192.168.80.63:30005/api/course/upload/video"
                                    :show-file-list="false"
                                    :on-success="handleAvatarSuccess"
                                    :before-upload="beforeAvatarUpload"
                                    :data="dataform"
                                     accept=".mp4"
                                    >
                                    <video  v-if="videourl" :src="videourl" class="avatar" controls="controls" id="videoplayer"></video>
                                       <i v-else   class="el-icon-plus avatar-uploader-icon"  :class="{'el-icon-loading':this.loading==true  }">
                                           <span v-if="this.loading==true "  >上传中......</span>
                                       </i>
                                 </el-upload>
                              </el-form-item>
                              <el-form-item label="视频名称:" prop="videoName">
                                <el-input v-model="formvideo.videoName" placeholder="上传视频后会获取"></el-input>
                              </el-form-item>
                              <el-form-item label="视频描述:" prop="videoDesc">
                                <el-input v-model="formvideo.videoDesc"   type="textarea" :rows="2"></el-input>
                              </el-form-item>
                              <el-form-item label="视频难度:">
                                  <el-radio-group v-model="formvideo.videoLevel">
                                        <el-radio :label="1">初级</el-radio>
                                        <el-radio :label="2">中级</el-radio>
                                        <el-radio :label="3">高级</el-radio>
                                  </el-radio-group>
                              </el-form-item>
                               <el-form-item  label="选择所属系">
                                    <div class="blockcaser">
                                      <el-cascader
                                             :options="optionselect"
                                              v-model="selectedOptions" 
                                              @change="changeval"
                                            @active-item-change="handleChangeslect"  
                                        >
                                      </el-cascader>
                                    </div>
                              </el-form-item>
                              <el-form-item label="排序" prop="videoOrder">
                                    <el-input v-model="formvideo.videoOrder"></el-input>
                              </el-form-item>
                              

                        </el-form> 

                          <el-button type="primary" size="small" style="float:right" @click="savedata">保存数据</el-button>
                    </el-col>


              </el-col>

          </el-row>
</template>
<script>
import{courseStructurepage,courseClassificationpage,courseContentpage,addvideoResource}from '@/api/api'  
export default {
       data(){
            return{
              loading:false,
       //
              courseContentdata:[],
              arryindex:'',
              courseClassificationdata:[],
                videourl:'',
                dataform:{
                  token:"",   
                },
             rules:{

             },
              optionselect:[],
              selectedOptions:[], 
                formvideo:{
                          videoName:'',
                          videoDesc:"", 
                          videoLevel:'',
                          videoOrder:'', 
                          videoUrl:'',
                          videoUri:'',
                          videoDuration:"",
                          courseContentId:'',
                        
                } 
            }
       },
      methods:{
             handleChangeslect(val){
                       console.log("-------")
                      console.log(val.length)
                 if(val.length==1){
                      if(val[0][1]=='1'){
                          var parms={
                                currentPage:1,
                                pageSize:1000,
                                courseStructureId:val[0][0]
                          }
                   courseClassificationpage(parms).then(res=>{
                                     if(res.data.code==0){
                                          console.log("二级")
                                          console.log(res)

                                          this.courseClassificationdata=res.data.data.list
                                       this.courseClassificationdata.forEach((item,index)=>{
                                                item.label=item.courseClassificationName;
                                                item.children=[];
                                                item.value=[item.courseStructureId,'2'];
                                             })
                                     }
                               for(var i=0;i<this.optionselect.length;i++){
                                    if(this.optionselect[i].courseStructureId==val[0][0]) {
                                                  console.log("55555555")
                                    this.optionselect[i].children= this.courseClassificationdata    ;
                                             
                                              this.arryindex=i
                                              
                                              console.log( this.optionselect)
                                         }

                                  }
                         })
                    }
               } 
                 
                 
               else if(val.length==2){
                        
                         if(val[1][1]==2){
                              var parms={
                                  currentPage:1,
                                  pageSize:1000,
                                  courseClassificationId:val[1][0]
                                }
                            courseContentpage(parms).then(res=>{
                                        console.log('三级')
                                        console.log(res)
                                        
                                       console.log(this.arryindex)
                                       if(res.data.code==0){
                                            
                                           this.courseContentdata=res.data.data.list
                                          this.courseContentdata.forEach((item,index)=>{
                                                item.label=item.courseContentName;
                                                item.value=[item.courseContentId,'3'];
                                               
                                          })
                                           //  this.optionselect[this.arryindex].cities  


                                             for(var k=0;k<this.optionselect[this.arryindex].children.length;k++){
                                               console.log("第一个")
                                                     console.log(this.optionselect[this.arryindex].children[k])
                                                     console.log("第二个")
                                                     console.log(val[1][0])
                                                    if(this.optionselect[this.arryindex].children[k].courseStructureId== val[1][0]){

                                                      console.log("进来了")
                                                          this.optionselect[this.arryindex].children[k].children =   this.courseContentdata
                                                       
                                                          this.formvideo.courseContentId=this.optionselect[this.arryindex].children[k].courseContentId
                                                    }
                                             }
                                       }    
                            })

                         }
                 }else {

                     console.log("zuihouyuiji")


                 }   
             },
                  handleAvatarSuccess(res, file) {
                      this.loading=false
                     console.log( file)
                    this.videourl = URL.createObjectURL(file.raw);
                              console.log("上传视频");
                              if(file.status=="success"){
                                     const filename=file.name.slice(0,file.name.length-4)
                                      this.formvideo.videoName=filename;
                                      this.formvideo.videoUrl=file.response.data.videoUrl;
                                      this.formvideo.videoUri=file.response.data.videoUri
                                      setTimeout(()=>{
                                                   const time=document.getElementById("videoplayer").duration/60
                                                    this.formvideo.videoDuration=time.toFixed(2)
                                                    console.log( this.formvideo.videoDuration)
                                      },800 )
                              }
                       },
                getcourseStructurepage(){
                    var params={
                          currentPage:1,
                          pageSize:100

                    }
                  courseStructurepage(params).then(res=>{
                            if(res.data.code==0){
                              this.optionselect=res.data.data.list
                              return   res.data.data.list.forEach((item,index)=>{
                                         item.label=item.courseStructureName;
                                         item.children=[];
                                         item.value=[item.courseStructureId,'1'];

                                  })

                        }
                  })
                },
            changeval(val){
                  console.log("change")
                  console.log(val)
                console.log(this.selectedOptions)

            },



          beforeAvatarUpload(file) {//上传前加一个参数.
            this.loading=true
            console.log("上传前")
            const token = sessionStorage.getItem("token");
            this.dataform.token = token;
             const isLtM = file.size / 1024 / 1024 < 100;//视频不能大于100M
               if (!isLtM) {
                    this.$message.error('上传大小不能超过 100MB!');
                  }
               return isLtM;
          },
          savedata(){
               console.log( this.formvideo)
          }
      },
      mounted(){
       
               this.getcourseStructurepage()
    
           
      }


}
</script>
 <style  lang="scss"    scoped>
        .formvideo{
           margin: 20px;
        }     
 </style>
 



<style>
     .formvideo  .el-form-item__label{
        padding: 0px 0px 0px 0px;
     } 
     .blockcaser .el-cascader {
       width: 100%
     }
   .avatar-uploader .el-upload {
  border: 1px dashed #d9d9d9;
  border-radius: 6px;
  cursor: pointer;
  position: relative;
  overflow: hidden;

}
.avatar-uploader .el-upload:hover {
  border-color: #409eff;
}
.avatar-uploader-icon {
  font-size: 28px;
  color: #8c939d;
  width: 178px;
  height: 178px;
  line-height: 178px;
  text-align: center;
}
.avatar {
  width: 178px;
  height: 178px;
  display: block;
}



</style>

