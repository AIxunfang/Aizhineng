<template>
  <el-row  class='loginConteiner'>
              <el-col class="backgroundstart">
                <div id='stars'></div>
                <div id='stars2'></div>
                <div id='stars3'></div>
                <div id='title'></div>
            <div  class="fromtable"> 
                <el-form :model="LoginForm" :rules="rules" ref='loginForm'  style="display:inline-block;vertical-align:middle" >
                       <el-form-item>
                           <span  class="companyName">讯方AI学习计算平台</span>
                       </el-form-item>
                        <el-form-item prop='name' >
                            <el-input v-model='LoginForm.name'       placeholder="请输入用户名"  class="inputwidth inputusericon" ></el-input>
                        </el-form-item>
                        <el-form-item    prop='pass'  :error='showError'   >
                            <el-input v-model='LoginForm.pass'  placeholder="请输入密码"    @keyup.native.enter="submitForm()"    @change='showError = null'   type="password"  class="inputwidth inputpassword"></el-input>
                        </el-form-item>
                        <el-form-item>
                             <el-input  type="button"   @click.native='submitForm' value="登录"   class="Enter"> </el-input>
                        </el-form-item>
                </el-form>
          </div>
            <div class="statement">Copyright © 2001-2018  深圳市讯方技术股份有限公司</div>
        </el-col>
      
  </el-row>
</template>
<script>
import qs from 'qs';
import {userlogin} from '@/api/api'
import{prefixfreemin} from '@/assets/js/prefixfreemin'
import {getIp} from '@/assets/js/getIp';
export default {
  data () {
      return {
          LoginForm: {
              name: '',
              pass: ''
          },
           showError:null,
      }
  },
  computed: {
      rules () {
          return {
              name: [
                  { required: true, message: "输入用户名", trigger: 'blur' }
              ],
              pass: [
                  { required: true, message: '请输入密码', trigger: 'blur' }
              ]
          }
      },
  },
  methods: {
      submitForm () {
             let user = { name: this.LoginForm.name }
             sessionStorage.setItem('user', JSON.stringify(user))
             var parms={
                   userAccount:this.LoginForm.name,
                   userPassword:this.LoginForm.pass
             }
          this.$refs['loginForm'].validate((valid) => {
              if(valid) {
                  let user = { name: this.LoginForm.name }
                       userlogin(qs.stringify(parms)).then(res=>{
                            if(res.data.code ==0){
                                      sessionStorage.setItem('user', JSON.stringify(user))//判断是不是在登录
                                      sessionStorage.setItem('token',res.data.data.token) 
                                      sessionStorage.setItem('uid',res.data.data.user.uid)  
                                   if(res.data.data.user.userType ===0){
                                        this.$router.push('/Firstpage')   
                                   }else if(res.data.data.user.userType===1){
                                        this.$router.push('/Managefristpage')   
                                   }
                            }else{
                                  this.showError="用户名或密码错误"
                            } 
                   })    
              } else {

                  return false;
               }
          })   
      },

  },
  mounted() {
      getIp((ip) => {
                this.uloginIp = ip;
               sessionStorage.setItem('getip',ip)
        })

  }
}
</script>
 
<style lang="scss" scoped>
   .loginConteiner{
              position: relative; 
              height: 100%;
              font-family:sans-serif;
              -ms-text-size-adjust:100%;
              -webkit-text-size-adjust:100%;
              //  background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);
                background: url(../../assets/img/loginnackurl.jpg)  no-repeat;
                overflow: hidden;
                background-size:cover;

         .fromtable{
               position: absolute;  
                top: 50%;
                left: 50%;
                width: 400px;
                height: 300px;
                margin-top: -150px;
                margin-left: -200px;
                 background-color: rgba(22,24,67,.3);
                border: 1px solid #f2f2f2;
                border-radius: 10px;
                text-align: center;
                line-height: 300px;
              .inputwidth{
                  width:240px;
                  background: #fff;
                  border-radius: 5px;
              }
              .companyName{
                  color: #fff;
                  font-size: 20px;
              }
       }
       .statement{
            color: #fff;
            text-align: center;
            position: fixed;
            bottom: 20px;
            width: 100%;
            font-size: 20px;
       }
   }
</style>
<style  scoped>
           @import "../../assets/css/normalize.css";  

</style>
<style>
       
      .Enter .el-input__inner{
                     cursor: pointer;
                     background:#1cc6e9;
                     color:#fff;
         }
         .inputusericon .el-input__inner{
             background:url(../../assets/img/usericon.png)  no-repeat 2px 4px;
             padding-left:45px;
             z-index:10;
         } 
         .inputpassword .el-input__inner{
              background:url(../../assets/img/userpassword.png)  no-repeat 2px 4px;   
                padding-left:45px;
         }
  
          
</style>






