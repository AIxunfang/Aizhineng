<template>
        
      <el-row>
            <el-col :span="24">
                        <div class="navigationbar"> 
                              <span class="navigationname">课程资源<i class="el-icon-arrow-right" aria-hidden="true"></i>
                                    课程资料
                              </span>
                        </div>
            </el-col>
           <el-col :span="24">
                    <el-form style="margin:20px">
                           <el-form-item>
                                     <el-select v-model="formStructuredata.selectType" placeholder="请选择所属体系" @change="changeseleval"   >
                                                <el-option
                                                      v-for="item in optionstixi"
                                                      :key="item.createTime"
                                                      :label="item.courseStructureName"
                                                      :value= item.courseStructureId>
                                                </el-option>
                                          </el-select> 
                                        <el-form-item    style="display:inline-block" >
                                          <el-select v-model="formStructuredata.selectTypemodel" placeholder="请选择分类"   >
                                                  <el-option
                                                         v-for="item in datamodel"
                                                        :key="item.createTime"
                                                        :label="item.courseClassificationName"
                                                        :value="item.courseClassificationId">
                                                  </el-option>
                                            </el-select>  
                                        </el-form-item>

                          </el-form-item>
                    </el-form>
           </el-col>

            <el-col :span="24">
               <el-button type="primary" size="small"  style="margin:20px;"  @click="addcouses"  >新增</el-button>

            </el-col>
            <el-col :span="24">
                 <el-dialog
                        :title="titlename"
                        :visible.sync="CoursedialogVisible"
                         width="600px"
                       >
                     <el-form   :model="cousecouseformInline"  class="formcourse" label-width="100px" :rules="rules" ref="cousecouseformInline"  >
                               <el-form-item label="上传资料" prop="materialUrl">
                                        <el-upload
                                                action="http://192.168.80.63:30005/api/course/upload/material"
                                                :show-file-list="false"
                                                :on-success="handleAvatarSuccess"
                                                 accept=".zip"
                                                
                                                  :data="dataform"
                                                 :before-upload="beforeAvatarUpload">
                                                    
                                                    <el-button type="success" size="mini" >添加</el-button>
                                                    
                                                </el-upload>
                              </el-form-item>
                              <el-form-item label="资料名称" prop="courseMaterialName">
                                    <el-input v-model="cousecouseformInline.courseMaterialName" placeholder="上传后自动获取"></el-input>
                              </el-form-item>
                              <el-form-item label="所属体系" prop="selectedOptions">
                                  <div class="blockcaser">
                                      <el-cascader
                                              :options="optionselect"
                                              v-model="cousecouseformInline.selectedOptions" 
                                              @change="changeval"
                                             
                                        >
                                      </el-cascader>
                                    </div>      
                              </el-form-item>
                              <el-form-item  label="资料描述">
                                     <el-input
                                          type="textarea"
                                          :rows="2"
                                          placeholder="请输入内容"
                                          v-model="cousecouseformInline.courseMaterialDesc">
                                     </el-input>
                              </el-form-item>
                   </el-form>  
                        <span slot="footer" class="dialog-footer">
                             
                              <el-button type="primary"  size="mini" @click="savedata" >确 定</el-button>
                        </span>
                  </el-dialog>
            </el-col>

      </el-row>
</template>
<script>
import{courseContentpage,courseStructurepage,courseClassificationpage,addcourseMaterial}from '@/api/api'
export default {
       data(){
            return{

            formStructuredata:{
                  selectType:'',
                  selectTypemodel:'',

            },
             datamodel:[],
              optionstixi:[],
                CoursedialogVisible:false,
                cousecouseformInline:{
                       courseMaterialName:'',
                       selectedOptions:[],
                       materialUri:"",
                       materialUrl:"",
                       courseMaterialDesc:"",
                       courseContentId:"",
                       courseClassificationId:'',
                       courseStructureId:"",      
                },
                titlename:null,
                optionselect:[],
                dataform:{
                      token: ""
                },
                uploadname:'',
                rules:{
                     materialUrl:[
                           { required: true, message: '选择上传的zip', trigger: 'change' }  
                     ],
                     selectedOptions:[
                          { type: 'array', required: true, message: '选择所属体系', trigger: 'change' } 
                     ],
                     courseMaterialName:[
                           { required: true, message: '名称不能为空', trigger: 'change' }  
                     ]   
                }
            }
       },
       methods:{
       getcourseStructurepage() {
      var params = {
        currentPage: 1,
        pageSize: 100
      };
      courseStructurepage(params).then(res => {
        console.log("tixi");
        console.log(res);

        if (res.data.code == 0) {
          this.optionstixi = res.data.data.list;
      //     this.optionstixi.forEach((item, index) => {
      //       item.type = 1;
      //       item.name = item.courseStructureName;
      //     });
          console.log( this.optionstixi)
        }
      });
    },

           changeseleval(val) {
                 this.formStructuredata.selectTypemodel=[]
                  //选择系,在选择类,
                  console.log(val);
                  var parms = {
                  currentPage: 1,
                  pageSize: 10000,
                  courseStructureId: String(val)
                  };
                  courseClassificationpage(parms).then(res => {
                  console.log(res);
                  if (res.data.code == 0) {
                  this.datamodel = res.data.data.list;
                  }

                  });
            },



            changeval(val){//选择所属
             console.log(val)
             this.cousecouseformInline.courseStructureId=val[0]
              this.cousecouseformInline.courseClassificationId=val[1]
              this.cousecouseformInline.courseContentId=val[2] 
            },
              beforeAvatarUpload(file) {
                        //上传前加一个参数.
                        this.loading = true;
                        console.log("上传前");
                        const token = sessionStorage.getItem("token");
                        this.dataform.token = token;
                        // const isLtM = file.size / 1024 / 1024 < 100; //视频不能大于100M
                        // if (!isLtM) {
                        // this.$message.error("上传大小不能超过 100MB!");
                        // }
                        // return isLtM;
                  },
       handleAvatarSuccess(res, file){
                 console.log(res)
                 console.log(file)    
                 if(file.status=="success"){
                       this.cousecouseformInline.courseMaterialName= file.name.slice(0, file.name.length - 4);
                       this.cousecouseformInline.materialUri=file.response.data.materialUri
                       this.cousecouseformInline.materialUrl=file.response.data.materialUrl

                 } 
                 

       },
        savedata(){
             console.log( this.cousecouseformInline)
             if(this.titlename=="新增"){
                 //   delete this.cousecouseformInline.selectedOptions
                 this.$refs['cousecouseformInline'].validate((valid)=>{
                          if(valid){
                                    addcourseMaterial(this.cousecouseformInline).then(res=>{
                                          console.log("--xinzeng--")
                                          console.log(res)
                                          if(res.data.code==0){
                                                 this.$refs['cousecouseformInline'].resetFields();
                                                   this.CoursedialogVisible=false

                                          }
                              }) 
                          }

                   })

                 
                 
             }
           

        },


            addcouses(){//点击新增
                     this.CoursedialogVisible=true
                     this.titlename="新增"
                  },
              focusdata() {
                   var params = {
                        currentPage: 1,
                        pageSize: 100
                      };
                      courseStructurepage(params).then(res => {
                        if (res.data.code == 0) {
                            console.log(res)
                           
                          let lists = res.data.data.list;
                         lists.forEach((item,index)=>{
                                this.optionselect.push({
                                    label:item.courseStructureName,
                                    value:item.courseStructureId,
                                    children: []
                                })
                              this.Stairarryindex=this.optionselect
                         })
                       this.Stairarryindex.forEach((item,indexcas)=>{
                              var parms = {
                                  currentPage: 1,
                                  pageSize: 1000,
                                  courseStructureId: this.optionselect[indexcas].value
                                };
                                courseClassificationpage(parms).then(res => {
                                      let cascChid = [];
                                    cascChid=res.data.data.list
                                     var _this=this
                                  if (res.data.code == 0) {
                                      cascChid.forEach((item,index) => {  
                                 this.optionselect[indexcas].children.push(
                                              {
                                                label:item.courseClassificationName,
                                                value:item.courseClassificationId,
                                                children: []
                                              }
                                         ) 
                                                var parms = {
                                                    currentPage: 1,
                                                    pageSize: 1000,
                                                    courseClassificationId:this.optionselect[indexcas].children[index].value
                                                };
                                                let conentchid=[]
                                         courseContentpage(parms).then(res=>{
                                                  conentchid=res.data.data.list
                                                 conentchid.forEach((item,contentindex)=>{
                                                   this.optionselect[indexcas].children[index].children.push(
                                                          {
                                                             label:item.courseContentName,
                                                             value:item.courseContentId,
                                                            
                                                          }
                                                       )   
                                                 })
                                            })
                                        })
                                    }
                                 })
                             })
                         }
                  }); 
       },      
 },
       mounted(){
              this.focusdata()
              this. getcourseStructurepage()
        },
       


}
</script>
<style scoped>
     .formcourse .el-cascader{
             width: 462px;
     }
</style>
