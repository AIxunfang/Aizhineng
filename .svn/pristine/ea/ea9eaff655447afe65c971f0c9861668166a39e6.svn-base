<template>
   <el-row >
          <div class="navigationbar"> 
               <span class="navigationname">课程资源<i class="el-icon-arrow-right" aria-hidden="true"></i>
                      课程视频
                </span>
           </div>
           <el-col :span="24">
                  <el-col :span="4">
                   <div style="margin:20px">
                       <el-button @click="addvideoResoure" type="primary" size="small" icon="el-icon-plus" >新增</el-button>
                   </div>
                  </el-col>
                  <el-col :span="20">
                          <div class="blockcaser" style="margin:20px;width:400px">
                                      <el-cascader
                                               style="width:400px;"
                                              :options="optionselect"
                                              v-model="selectedOptions" 
                                              @change="changeval"
                                              @active-item-change="handleChangeslect"  
                                              placeholder="请选择查询条件"
                                        >
                                </el-cascader>
                          </div>
                  </el-col>
           </el-col>
           <el-col :span="24">

           </el-col>


   </el-row>
</template>
<script>
import{videoResourcelist,courseStructurepage,courseClassificationpage,courseContentpage} from "@/api/api"
export default {
      data(){
         return{
               optionselect:[],
              selectedOptions:[],
         }
      },
      methods:{
           addvideoResoure(){
                  this.$router.push('/CourseStructure')
           },
                    handleChangeslect(val){
                 if(val.length==1){
                      if(val[0][1]=='1'){
                          var parms={
                                currentPage:1,
                                pageSize:1000,
                                courseStructureId:val[0][0]
                          }
                   courseClassificationpage(parms).then(res=>{
                                    let cascChid = []
                                     if(res.data.code==0){
                                          this.courseClassificationdata=res.data.data.list;  
                                          for(let child of this.courseClassificationdata) {
                                            cascChid.push({
                                              label: child.courseClassificationName,
                                              value: [child.courseStructureId,'2'],
                                              children: []
                                            })
                                          }
                                     }
                               for(var i=0;i<this.optionselect.length;i++){
                                    if(this.optionselect[i].value[0]==val[0][0]) {
                                    this.optionselect[i].children= cascChid    ;
                                              this.arryindex=i
                                         }

                                  }
  
                         })
                    }
               }   
               else if(val.length==2){
                         if(val[1][1]==2){
                              var parms={
                                  currentPage:1,
                                  pageSize:1000,
                                  courseClassificationId:val[1][0]
                                }
                            courseContentpage(parms).then(res=>{
                                       if(res.data.code==0){
                                         res.data.data.list.forEach((item,index)=>{
                                             this.courseContentdata=[]
                                             this.courseContentdata.push({
                                                     label:item.courseContentName,
                                                     value:[item.courseContentId,'3']
                                             })
                                          })
                                             for(var k=0;k<this.optionselect[this.arryindex].children.length;k++){
                                                    if(this.optionselect[this.arryindex].children[k].value[0]== val[1][0]){
                                                          this.optionselect[this.arryindex].children[k].children =   this.courseContentdata
                                                    }
                                             }
                                       }    
                            })

                         }
                 }  
             },
            changeval(val){
                 //  this.formvideo.courseContentId=this.formvideo.selectedOptions[2][0]
            },


       getcourseStructurepage(){
                    var params={
                          currentPage:1,
                          pageSize:100

                    }
                  courseStructurepage(params).then(res=>{
                            if(res.data.code==0){
                              let lists = res.data.data.list
                              for(let item of lists) {
                                this.optionselect.push({
                                  label:item.courseStructureName,
                                  value: [item.courseStructureId,'1'],
                                  children: []
                                })
                              }      
                        }
                  })
                },
      },
      mounted(){
           this. getcourseStructurepage()
      }
}
</script>

