<template>
  <el-row class="Drilist" >
      <el-col :span='24'>
             <div class="navigationbar"> 
               <span class="navigationname">训练管理<i class="el-icon-arrow-right" aria-hidden="true"></i>
                     列表列表 
                </span>
            </div>
        <div class="seachframe">
                 <div  class="formdata">
                        <el-form :inline="true" >
                             <el-form-item>
                                    <el-select v-model="type" placeholder="请选择条件"  style="width:130px">
                                             <el-option value='1'  label='项目名称'></el-option>
                                             <el-option value='2' label='训练名称' ></el-option>
                                    </el-select>

                             </el-form-item>
                              <el-form-item >
                                    <el-input v-model="projectName" placeholder="请输入项目名或训练名"></el-input>         
                              </el-form-item>
                              <el-form-item>
                                <el-button type="primary" icon="el-icon-search"  size="small" @click="seachabout"  >查询</el-button>
                              </el-form-item>
                        </el-form>
                   </div>
            </div>
      </el-col>
      <el-col :span="24">
              <div class="projectaddbox  projectmodel">
                    <div class="prijectaddpic"  @click="addrouter" ></div>
              </div>
             <div   class="projectmodel" v-for="(item,index) in modelarry" :key="item.id">
                  <div  class="projectdiscrb">
                          <div class="projectdimg" >
                            <img src="../../assets/img/taringlist.png" alt="文件logo" class="massterpic" >
                         </div>
                         <div  class="projectdisright">
                            <div  class="projectName">{{item.trainingName}}
                                <span style="display:inline-block;float:right;margin-right:5px;">
                                   <span v-if="item.trainingStatus==1" style="color:#409eff">新建</span>
                                   <span v-if="item.trainingStatus==2">训练中</span>
                                    <span v-if="item.trainingStatus==3" style="color:#67c23a">成功</span>
                                    <span v-if="item.trainingStatus==4" style="color:red">失败</span>
                                    <span v-if="item.trainingStatus==5" style="color:#03a9f4">列队中</span>
                                     <span v-if="item.trainingStatus==6">已提交</span>
                                </span>
                            </div>
                            <div class="projectdiecribetion"><span>模块描述:</span>{{item.trainingRemind}}</div>
                               <div class="projectdiecribetion"><span>所属项目:</span>{{item.projectNameZh}}</div>
                         </div>
                  </div>
                   <div class="projectbottom">
                         <div class="menukey">
                               <el-button  size="small"  icon="el-icon-download" v-if='item.trainingStatus==3'  @click='doenmodel(index)'  >模型下载</el-button>
                              <span v-else   :class='{"startdisabled":modelarry[index].trainingStatus !== 1}'><el-button   size="small"  icon="el-icon-caret-right" @click.once="startmodel(index)" >启用</el-button></span>   
                        </div>
                          <div class="menukey">
                                   <el-button  v-if='item.trainingStatus==2'       size="small"  icon="el-icon-caret-bottom" @click="stoptaring(index)" >终止</el-button>
                                  <el-button   v-else    size="small"  icon="el-icon-delete" @click="delecttaring(index)" >删除</el-button>
                        </div>  
                         <div class="menukey">
                             <el-button  :disabled="item.trainingStatus==1"     size="small"  icon="el-icon-search"  @click="deails(index)">详情</el-button>
                        </div>                          
                   </div>
              </div>
      </el-col>
         <el-col :span="24">
              <div class="paagenumber">
                   <el-pagination
                        background
                        layout="prev, pager, next, total"
                        :page-size='pageSize'
                        @current-change="pageIndexChange"
                        :total="paggtatol">
                  </el-pagination>
              </div>
         </el-col>
  </el-row>
</template>
<script>
import {baseUrl} from '../../../static/baseurl'
import {findpage,trainingstart,trainingdelete,modeldownload,trainingterminate} from '@/api/api'
export default {
       data(){
           return{
                 baseUrl,
                 currpage:1,
                 pageSize:8,
                 paggtatol:null,
                 modelarry:[],
                 projectName:'',
                 Username:'',
                 type:'',
           }
       },
       methods:{
              addrouter(){//点击添加,路由跳转
                      this.$router.push('/NewDrill')     
               },
             doenmodel(index){
                   var parms={
                          trainingId:this.modelarry[index].trainingId
                   }
                 modeldownload(parms).then(res=>{
                           console.log(res)
                           if(res.data.data.status==0){
                      window.location.href =
                        `${baseUrl}`+"/file/" + res.data.data.msg;   
                           }else{
                                  this.$message.error(res.data.data.msg)
                           }
                 })  
             },
              stoptaring(index){
                 var parms={
                              trainingId: this.modelarry[index].trainingId
                        }   
                     trainingterminate(parms).then(res=>{
                           if(res.data.code==0){
                                    this.getfindpage()  
                           }else{
                                  this.$message.error(res.data.message)
                           }
                     })       
              },
               startmodel(index){//开始训练
                        var parms={
                              trainingId: this.modelarry[index].trainingId
                        }
                      trainingstart(parms).then(res=>{
                            if(res.data.code==0){
                               this.$router.push({name:'Trainstart',params:{id:this.modelarry[index].trainingId}}) 
                            }else{
                                  this.$message.error(res.data.message);
                            }
                      })
               },
               pageIndexChange(index){//翻页
                      this.currpage=index
                      this.getfindpage()
               },
               seachabout(){//查询
                      this.getfindpage()
               },
               getfindpage(){//训练列表
                   var parms={
                           currentPage:this.currpage,
                           pageSize:this.pageSize,
                           userAccount:this.Username.name,
                           name:this.projectName,
                           type:Number(this.type)
                   }
                  findpage(parms).then(res=>{
                        
                          console.log(res)
                          console.log(parms)

                        if(res.data.code==0){
                              this.modelarry=res.data.data.list
                              this.paggtatol=res.data.data.total
                        }
                  })
               },
               deails(index){
                      this.$router.push({name:'Trainstart',params:{id:this.modelarry[index].trainingId,type:this.modelarry[index].trainingStatus}}) 
               },
               delecttaring(index){
                   
                   var parms={
                         trainingId:this.modelarry[index].trainingId
                   }
                this.$confirm('此操作将永久删除该模型, 是否继续?', '提示', {
                              confirmButtonText: '确定',
                              cancelButtonText: '取消',
                              type: 'warning'
                              }).then(() => {
                             trainingdelete(parms).then(res=>{
                                        if(res.data.code==0){
                                               this.$message({
                                                     type:'success',
                                                     message:"删除成功"
                                               })
                                            this.getfindpage()   
                                        }else{
                                              this.$message.error(res.data.message);
                                        }      
                             })
                              }).catch(() => {
                              this.$message({
                                    type: 'info',
                                    message: '已取消删除'
                              });          
                    });
               }
       },
       mounted(){

                this.Username = JSON.parse(sessionStorage.getItem("user"));
                this.getfindpage()  
       }
}
</script>
<style lang="scss" scoped>

</style>
