<template>
    <el-row>
          <div class="navigationbar"> 
               <span class="navigationname">课程管理<i class="el-icon-arrow-right" aria-hidden="true"></i>
                      课程资源
                </span>
           </div>
          <el-col :span="24">
               <el-col :span="24"   style="padding: 10px 0px 10px 20px">
                     <el-dropdown    @command="selecty">
                              <el-button type="primary" class="el-icon-plus" size="mini">
                                       添加
                              </el-button>
                              <el-dropdown-menu slot="dropdown">
                              <el-dropdown-item  command="1">体系</el-dropdown-item>
                              <el-dropdown-item command="2">分类</el-dropdown-item>
                               <el-dropdown-item command="3">模块</el-dropdown-item>
                              </el-dropdown-menu>
                         </el-dropdown>
               </el-col>
                 <el-col :span="12" style="padding:20px;border:1px solid #ededed">
                        <div >
                            <el-input placeholder="请输入内容" v-model="searchName"  size="small" class="input-with-select">
                                <el-button slot="append" icon="el-icon-search"></el-button>
                            </el-input>
                        </div>  
                        <div class="block" style="margin-top:15px">
                        <el-tree
                          :accordion="true"
                           lazy
                          :props="props"
                          :load="loadNode1"
                          >
                          <span class="custom-tree-node" slot-scope="{ node, data }">
                            <span>
                               {{data.name}}
                             </span>
                            <span style="float:right">
                              <el-button
                                type="text"
                                size="mini"
                                v-show="data.type !=3"
                                @click="() => editconcent(data)">
                                 编辑
                              </el-button>
                              <el-button
                                type="text"
                                size="mini"
                                @click="() => removecon(node, data)">
                                删除
                              </el-button>
                            </span>
                          </span> 
                        </el-tree>
                      </div>   
 

                 </el-col>
                 <el-col :span="12"  style="padding:20px ;border:1px solid #ededed"  v-if="this.formStructuredata.type !=null ">
                    <div>
                          <div style="text-align:center">新增{{titlename}}</div>
                         <el-form  :model="formStructuredata"   ref="formStructuredata"    class="formStructureclass" size="small" label-position="top" :rules="rules">

                          <el-form-item label="所属体系"  prop="selectType"  v-if=" this.formStructuredata.type==2 || this.formStructuredata.type==3">
                                      <el-select v-model="formStructuredata.selectType" placeholder="请选择所属体系" @change="changeseleval" >
                                                <el-option
                                                      v-for="item in optionstixi"
                                                      :key="item.createTime"
                                                      :label="item.courseStructureName"
                                                      :value="item.courseStructureId">
                                                </el-option>
                                          </el-select> 
                                        <el-form-item   prop="selectTypemodel" v-if="this.formStructuredata.type==3"  style="display:inline-block">
                                          <el-select v-model="formStructuredata.selectTypemodel" placeholder="请选择分类"  >
                                                  <el-option
                                                         v-for="item in datamodel"
                                                        :key="item.createTime"
                                                        :label="item.courseClassificationName"
                                                        :value="item.courseStructureId">
                                                  </el-option>
                                            </el-select>  
                                        </el-form-item>

                          </el-form-item>

                            <el-form-item :label=" titlename + '名称' " prop="name">
                                <el-input v-model="formStructuredata.name" placeholder="输入名称"></el-input>
                            </el-form-item>
                            <el-form-item  :label=" titlename+'排序'" prop="order" >
                                  <el-input v-model.number="formStructuredata.order" placeholder="请输入数字"></el-input>
                            </el-form-item>
                            <el-form-item :label="titlename+ '描述' " prop="desc">
                                     <el-input
                                            type="textarea"
                                            :rows="2"
                                            placeholder="请输入内容"
                                            v-model="formStructuredata.desc">
                                     </el-input>
                               </el-form-item>
                             <el-form-item label="上传封面图"   prop="uri">
                                  <el-upload
                                    class="avatar-uploader"
                                    action="http://192.168.80.63:30005/api/course/upload/img"
                                    :show-file-list="false"
                                    :on-success="handleAvatarSuccess"
                                    :before-upload="beforeAvatarUpload"
                                    :data="dataform"
                                     accept="image/*"
                                    >
                                    <img  v-if="imageUrlshow" :src="imageUrlshow" class="avatar">
                                    <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                                 </el-upload>
                            </el-form-item>
                            <el-form-item>
                                  <el-button type="primary" size="mini"  style="float:right"  @click="savedata" >保存</el-button>
                            </el-form-item>   
                     </el-form>
                   </div>
                 </el-col>
          </el-col>
    </el-row>
</template>
<script>
import{courseaddcourse,courseStructurepage,courseClassificationpage,courseContentpage } from "@/api/api"
export default {
  data() {
    return {




       props: {
          label: 'name',
          children: 'zones',
          isLeaf: 'leaf'
        },
          datachirtwo:[],
      datamodel:[],
      optionstixi:[],
      optioncontent:[],

      dataform:{
         token:"",   
      },
      titlename:null,
      imageUrlshow: "",
      searchName: "",
      formStructuredata: {
                  name:'',
                  desc:'',
                  order:'',
                  uri:'',
                  url:'',
                  type:null,
                selectType:"",
               selectTypemodel:"",
          },
       rules:{
            selectType:[
                  { required: true, message: '请选择体系', trigger: 'change' },
             ],
            selectTypemodel:[
                 { required: true, message: '请选择分类', trigger: 'change' },
             ],
             name:[
                  { required: true, message: '请输入名称', trigger: 'blur'},
             ],
            order:[
                       { required: true, message: '请输入序号', trigger: 'blur'},
                       { type: 'number', message: '必须为数字值'}
            ],
             uri:[
                  //  { required: true, message: '请上传图片', trigger: 'change' },
                    {  required: true, message: '请上传图片', trigger: 'change' }
             ],
             desc:[
                     { required: true, message: '请描述', trigger: 'blur'},
             ]
       }


    };
  },
  methods: {
      selecty(val){ 
            console.log(val)
            this.formStructuredata.type=val
            switch(val){
                   case '1':
                   this.titlename="体系"
                   
                   break;
                   case '2':
                   this.titlename="分类"
                   break;
                   case '3':
                  this.titlename="模块"
                  break;
            }

      },
      handleAvatarSuccess(res, file) {
            console.log(file.raw)
            this.imageUrlshow = URL.createObjectURL(file.raw);
                              console.log("上传");
                              console.log(res);
                              if(res.code==0){
                                  this.formStructuredata.uri=res.data.imageUri
                                  this.formStructuredata.url=res.data.imageUrl    
                              }else{
                                     this.$message.error(res.data.message)
                              }
      },
      beforeAvatarUpload(file) {//上传前加一个参数.
            const token = sessionStorage.getItem("token");
            this.dataform.token = token;
      },
      handleNodeClick(data){
        console.log(data)
       this.datachirtwo=data
       
        var _this=this
             if(data.type==1){
                   var parms={
                      currentPage:1,
                      pageSize:10000,
                      courseStructureId:data.courseStructureId
                   }  
  


             }

      },


          getcourseStructurepage(){
               var params={
                     currentPage:1,
                     pageSize:100

               }
             courseStructurepage(params).then(res=>{
                       if(res.data.code==0){
                            this.optionstixi=res.data.data.list   
                            this.optionstixi.forEach((item,index)=>{
                                     item.type=1
                                     item.name=item.courseStructureName
                            })
                       }


             })

      },
       loadNode1(node, resolve){
             console.log("lodaing")
              console.log(node)
              console.log(resolve)
             setTimeout(()=>{
              if(node.level === 0){
                         return resolve(this.optionstixi)
                        }
                },500)
            if(node.level > 2) return resolve([]);
                if(node.data !==undefined){
                    console.log("jisudue")
                   if(node.data.type==1){
                              var parms={
                                  currentPage:1,
                                  pageSize:10000,
                                  courseStructureId:node.data.courseStructureId
                            }
                    courseClassificationpage(parms).then(res=>{
                            console.log("二级的菜单")
                            console.log(res)

                          if(res.data.code==0){
                            this.optionfenlei=res.data.data.list
                               res.data.data.list.forEach((item,index)=>{
                                       item.type=2
                                       item.name=item.courseClassificationName
                               })
                              setTimeout(() =>{
                                  resolve(this.optionfenlei)
                              },500)  
                             

                          }
                   }) 
               }else if(node.data.type==2){
                    console.log("sanjide neirong ")
                    var parms={
                                 currentPage:1,
                                  pageSize:10000,
                                  courseClassificationId:node.data.courseStructureId
                    }
                    courseContentpage(parms).then(res=>{
                                   console.log("三级")
                                   console.log(res)    
                                   if(res.data.code==0){
                                       this.optioncontent=res.data.data.list
                                      res.data.data.list.forEach((item,index)=>{
                                          item.type=3
                                          item.name=item.courseContentName
                                         })
                            setTimeout(() =>{
                                  resolve( this.optioncontent)
                                
                              },500)  

                                 
                                   }
                          
                    })

               }   
           }
       },
      editconcent(data){
         console.log(data)

      },
     removecon(){

     },

     changeseleval(val){//选择系,在选择类,
         console.log(val)
         var parms={
                currentPage:1,
                pageSize:10000,
                courseStructureId:val
            }
          courseClassificationpage(parms).then(res=>{
                         console.log(res)
                            if(res.data.code==0){
                                 this.datamodel=res.data.data.list
                            }

                        this.datamodel.forEach(item=>{
                                  item.type=2
                                   
                        })
           })  
         
     },



      savedata(){
             if(this.formStructuredata.type==2){
                 this.formStructuredata.parentId=this.formStructuredata.selectType
             }else if(this.formStructuredata.type==3){
                    this.formStructuredata.parentId= this.formStructuredata.selectTypemodel
             }
                        this.formStructuredata.order=Number(this.formStructuredata.order)
                          this.formStructuredata.type=Number( this.formStructuredata.type)
                          var parms=this.formStructuredata
              this.$refs['formStructuredata'].validate((valid)=>{
                    if(valid){

                        courseaddcourse(parms).then(res=>{
                                  console.log(res)
                                  if(res.data.code==0){
                                          this.$message({
                                                type:"success",
                                                message:'保存成功'
                                          })
                                           this.$refs['formStructuredata'].resetFields();
                                      }else{
                                        this.$message.error(res.data.message)
                                     }
                           })
                    }
              })
      




             console.log(parms)
      },



  },
  mounted() {
        this.getcourseStructurepage()
  }
};
</script>
  <style  lang="scss"   scoped>

 .custom-tree-node{
     width:100%;
 }
</style>
 <style>
.formStructureclass .el-form-item {
  margin-bottom:5px;
}
.formStructureclass  .el-form-item__label{
       padding:0px 0px 0px ;
}



.avatar-uploader .el-upload {
  border: 1px dashed #d9d9d9;
  border-radius: 6px;
  cursor: pointer;
  position: relative;
  overflow: hidden;

}
.avatar-uploader .el-upload:hover {
  border-color: #409eff;
}
.avatar-uploader-icon {
  font-size: 28px;
  color: #8c939d;
  width: 178px;
  height: 178px;
  line-height: 178px;
  text-align: center;
}
.avatar {
  width: 178px;
  height: 178px;
  display: block;
}
</style>
 

