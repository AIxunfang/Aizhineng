<template>
     <el-row>
           <el-col :span='24'>
             <div class="navigationbar"> 
               <span class="navigationname">权限管理<i class="el-icon-arrow-right" aria-hidden="true"></i>
                    用户管理
                </span>
            </div>
            <div class="seachframe">
                 <div  class="formdata">
                     <el-form :inline="true"  size="mini">
                       <el-form-item >
                            <el-select v-model="searchType" placeholder="选择用户身份">
                                <el-option label="登录名" value="1"></el-option>
                                <el-option label="用户名" value="2"></el-option>
                                <el-option label="邮箱" value="3"></el-option>
                               <el-option label="手机号" value="4"></el-option>
                            </el-select>
                        </el-form-item>
                         <el-form-item  >
                                    <el-input v-model="keyWord"  placeholder="输入搜索的相关字节" ></el-input>         
                              </el-form-item>
                              <el-form-item>
                                <el-button type="primary" icon="el-icon-search" size="mini"   @click="Seach_user"  >查询</el-button>
                              </el-form-item>   
                        </el-form>
                   </div>
                  <div style="float:right;display:inline-block;margin-right:80px" >
                         <el-button icon="el-icon-plus" type="primary"  size="mini"  @click="addueser" >新增</el-button>    
                          <el-button icon="el-icon-delete" type="danger"  size="mini" @click='batchdelect' >批量删除</el-button>  
      
                         <el-button size='mini'  @click='batckdown'>导入模版</el-button>
                          <el-upload
                            style="display:inline-block"   
                            :action="uploadurl"
                            accept='.xlsx,.xls'
                            :show-file-list="false"
                            :on-success="handleAvatarSuccess"
                            :data="dataform"
                            :before-upload="beforeAvatarUpload">
                          <el-button size='mini'>批量上传</el-button>
                          </el-upload>

                      
                  </div>  
            </div>
         </el-col>
         <el-col :span="24">
                 <el-dialog
                    :title="userinfo"
                    :visible.sync="UserdialogVisible"
                    width="600px"
                    @close="closeuserdislog"
                    >
                    <el-form  :model="formuserAdd"  ref="formuserAdd"   :inline="true"  class="adduserform" size="mini" label-width="80px" :rules="rules">
                        <el-form-item label="登录帐号" prop="userAccount">
                            <el-input v-model="formuserAdd.userAccount"  :disabled="Diseditsfalse"    placeholder="用户名"  @blur="check_user_acount" ></el-input>
                            <div style="height:5px; color:red ;line-height:24px" v-show="Namerepeat" >登录账号已存在</div>
                        </el-form-item>
                        <el-form-item label="密码">
                                 <el-input v-model="formuserAdd.password" placeholder="默认密码admin"></el-input>
                        </el-form-item>
                          <el-form-item label="真实姓名">
                            <el-input v-model="formuserAdd.username" placeholder="真实姓名"></el-input>
                        </el-form-item>                 
                        <el-form-item label="用户身份" prop="userIdentity">
                            <el-select v-model="formuserAdd.userIdentity" placeholder="选择用户身份">
                                <el-option label="学生" value="1"></el-option>
                                <el-option label="老师" value="2"></el-option>
                            </el-select>
                        </el-form-item>
                        <el-form-item label="用户状态" prop="userStatus">
                            <el-select v-model="formuserAdd.userStatus" placeholder="选择用户状态">
                                <el-option label="启用" value="0"></el-option>
                                <el-option label="禁止" value="1"></el-option>
                                <el-option label="其他" value="2"></el-option>
                            </el-select>
                        </el-form-item>
                         <el-form-item label="角色" prop="roleIds">
                              <el-select v-model="formuserAdd.roleIds"  multiple    placeholder="选择">
                                  <el-option 
                                    v-for="item in tableData"
                                    v-show="item.roleType !==1"
                                   :key="item.id"
                                   :label="item.roleName"
                                   :value="item.id">
                                  </el-option>
                            </el-select>
                        </el-form-item>
                        <el-form-item label="邮箱" prop="userEmail">
                            <el-input v-model="formuserAdd.userEmail" placeholder="邮箱"></el-input>
                        </el-form-item>  
                        <el-form-item label="手机" prop="userMobile">
                            <el-input v-model="formuserAdd.userMobile" placeholder="手机号"></el-input>
                        </el-form-item>  
                        <el-form-item label="备注">
                              <el-input
                                    type="textarea"
                                    autosize
                                    placeholder="请输入备注内容"
                                    v-model="formuserAdd.userRemind">
                                    </el-input>  
                        </el-form-item>


                      </el-form>
                    <span slot="footer" class="dialog-footer">
                      <el-button type="primary" size="mini" @click="savadata">保存</el-button>
                    </span>
                 </el-dialog>
         </el-col>
         <el-col :span="24">
                <div  style="margin:20px">
                       <el-table
                           size="mini"
                           border
                          :data="usertableData"
                          tooltip-effect="dark"
                          stripe
                           @selection-change="handleSelectionChange"
                          style="width: 100%">
                         <el-table-column
                              type="selection"
                              width="55">
                            </el-table-column>
                          <el-table-column
                            prop="userAccount"
                            label="登录账号"
                            width="140">
                          </el-table-column>
                          <el-table-column
                            prop="username"
                            label="真实姓名"
                            width="120">
                          </el-table-column>
                          <el-table-column label="手机号" prop="userMobile" width="120px">
                          </el-table-column>
                          <el-table-column label="邮箱" prop="userEmail">
                          </el-table-column>

                          <el-table-column
                            width="160px"
                            label="创建时间">
                           <template slot-scope="scope">
                                {{timeFormattershowsecod(scope.row.userCreateTime)}}   
                           </template>
                          </el-table-column>
                          <el-table-column
                            width="60px"
                            label="身份">
                             <template slot-scope="scope">
                                <span v-if="scope.row.userIdentity==1">学生</span>
                                <span v-else>老师</span>
                            </template>
                          </el-table-column>
                          <el-table-column
                           width="60px"
                            label="状态">
                            <template slot-scope="scope">
                                    <span v-if="scope.row.userStatus==0">正常</span>
                                    <span v-if="scope.row.userStatus==1">禁用</span>
                                    <span v-if="scope.row.userStatus==2">其他</span>
                          </template>
                          </el-table-column>
                           <!-- <el-table-column
                           width="100px"
                            label="超级管理员">
                             <template slot-scope="scope">
                                <span v-if="scope.row.userType==1">是</span>
                                <span v-else>否</span>
                            </template>
                          </el-table-column> -->
                          <el-table-column label="操作" width="160px">
                               <template slot-scope="scope">
                                  <el-button  type="danger"   round  size="mini" @click="delect_user(scope.row)">删除</el-button>
                                   <el-button type="primary"  round  size="mini" @click="edit_user(scope.row)">编辑</el-button>
                               </template>
                          </el-table-column>
                    </el-table> 

                </div>
         </el-col>
         <el-col :span="24">
              <div class="paagenumber">
                   <el-pagination
                        background
                        layout="prev, pager, next, total"
                        :page-size='pageSize'
                        @current-change="pageIndexChange"
                        :total="paggtatol">
                  </el-pagination>
              </div>
         </el-col>
     </el-row>
</template>
<script>
import {baseUrl} from '../../../static/baseurl'
import { timeFormattershowsecod } from "@/assets/js/common";
import {
  userAdd,
  userlistpage,
  deleteuid,
  usercheck,
  rolelist,
  updateaccountedit,
  deletbatch
} from "@/api/api";
export default {
  inject:['reload'],
  data() {
    
    return {
      uploadurl:baseUrl+"/user/import/users",
      baseUrl,
      dataform:{
            token:''
      },
      userinfo: null,
      Diseditsfalse: false,
      tableData: [],
      Namerepeat: false,
      paggtatol: null,
      timeFormattershowsecod,
      pageSize: 10,
      currentPage: 1,
      searchType: "1",
      keyWord: "",
      usertableData: [],
      roleseach: "",
      UserdialogVisible: false,
      formuserAdd: {
        userAccount: "",
        username: "",
        userIdentity: "1",
        userStatus: "0",
        userType: "0",
        password: "",
        roleIds: [],
        userMobile: "",
        userEmail: "",
        userRemind: ""
      },
      rules: {
        userAccount: [
          { required: true, message: "输入登录帐号", trigger: "blur" },
          {
            pattern: /^[0-9a-zA-Z_]{1,}$/,
            message: "由数字英文字母或下划线组成"
          }
        ],
        userEmail: [
          {
            pattern: /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z0-9]{2,6}$/,
            message: "邮箱验证不通过"
          }
        ],
        userMobile: [
          { pattern: /^1(3|4|5|6|7|8)\d{9}$/, message: "手机号码格式错误" }
        ],
        roleIds: [
          {
            type: "array",
            required: true,
            message: "选择用户角色",
            trigger: "change"
          }
        ]
      },
      multipleSelection:[],
    };
  },
  methods: {
   batchdelect(){
        console.log(this.multipleSelection)
       if(this.multipleSelection.length==0){
            this.$message('选择需要删除的用户')
       }else{
             var parms={
               ids:this.multipleSelection.join('&')
            }
          deletbatch(parms).then(res=>{
                    if(res.data.code==0){
                       this.reload(); 
                    }else{
                       this.$message.error(res.data.message)
                    }
          })
       }
   },
   handleSelectionChange(val) {
                 this.multipleSelection=[]
                  console.log(val)
                 val.forEach((item,index)=>{
                    this.multipleSelection.push(item.uid)
                 })
      },
    batckdown(){//批量下载模版
       window.location.href= `${baseUrl}` +'/file/template/user/userImportTemplate.xlsx'
    },
    beforeAvatarUpload(){
            const token = sessionStorage.getItem("token");
            this.dataform.token=token
    },
    handleAvatarSuccess(res,file ){
             if(res.code==0){
                this.$message({
                   type:'success',
                   message:res.data
                })
             }else{
                this.$message.error(res.message)
             }
    },
    closeuserdislog() {
      //关闭弹框
      this.formuserAdd.userAccount = "";
      this.formuserAdd.username = "";
      this.formuserAdd.userIdentity = "1";
      this.formuserAdd.userStatus = "0";
      this.formuserAdd.userType = "0";
      this.formuserAdd.password = "";
      this.Namerepeat = false;
      this.Diseditsfalse = false;
      this.formuserAdd.userMobile = "";
      this.formuserAdd.userEmail = "";
      this.formuserAdd.roleIds = [];
    },
    edit_user(index) {
      this.userinfo = "编辑用户";
      this.UserdialogVisible = true;
      this.Diseditsfalse = true;
      this.formuserAdd.userAccount = index.userAccount;
      this.formuserAdd.username = index.username;
      this.formuserAdd.userIdentity = String(index.userIdentity);
      this.formuserAdd.userStatus = String(index.userStatus);
      this.formuserAdd.userType = String(index.userType);
      //  this.formuserAdd.roleIds=index.roleId
      var usertypedata = index.roleId.split(",");
      this.formuserAdd.roleIds = usertypedata;
      // var usertypedata=usertype.split(',')
      this.formuserAdd.userMobile = index.userMobile;
      this.formuserAdd.userEmail = index.userEmail;
      this.formuserAdd.userRemind = index.userRemind;
    },
    getrolelist() {
      //角色列表
      rolelist().then(res => {
        if (res.data.code == 0) {
          this.tableData = res.data.data;
        }
      });
    },

    addueser() {
      this.UserdialogVisible = true;
      this.userinfo = "增加用户";
    },
    savadata() {
      if (this.Namerepeat == false) {
        var parms = this.formuserAdd;
        this.$refs["formuserAdd"].validate(valid => {
          if (valid) {
            this.formuserAdd.userIdentity = Number(
              this.formuserAdd.userIdentity
            );
            this.formuserAdd.userStatus = Number(this.formuserAdd.userStatus);
            this.formuserAdd.userType = Number(this.formuserAdd.userType);

            if (this.userinfo == "增加用户") {
              userAdd(parms).then(res => {
                if (res.data.code == 0) {
                  this.UserdialogVisible = false;
                  this.getuserlistpage();
                } else {
                  this.$message.error(res.data.message);
                }
              });
            } else {
               if(valid){
              updateaccountedit(this.formuserAdd).then(res => {
                if (res.data.code == 0) {
                    this.UserdialogVisible = false;
                     this.getuserlistpage();
                } else {
                  this.$message.error(res.data.message);
                }
              });      
               }
            }
          }
        });
      }
    },
    check_user_acount() {
      //验证登录名
      var parms = {
        userAccount: this.formuserAdd.userAccount
      };
      usercheck(parms).then(res => {
        console.log(res);
        if (res.data.data === true) {
          this.Namerepeat = true;
        } else {
          this.Namerepeat = false;
        }
      });
    },

    getuserlistpage() {
      var parms = {
        searchType: Number(this.searchType),
        keyWord: this.keyWord,
        pageSize: this.pageSize,
        currentPage: this.currentPage
      };
      userlistpage(parms).then(res => {
        if (res.data.code == 0) {
          this.usertableData = res.data.data.list;
          this.paggtatol = res.data.data.total;
        }
      });
    },
    pageIndexChange(index) {
      this.currentPage = index;
      this.getuserlistpage();
    },
    delect_user(index) {
      //删除
      console.log(index);
      var parms = {
        uid: index.uid
      };
      this.$confirm("此操作将永久删除该用户所有信息和数据, 是否继续?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      })
        .then(() => {
          deleteuid(parms).then(res => {
            if (res.data.code == 0) {
              this.getuserlistpage();
            }
          });
        })
        .catch(() => {
          this.$message({
            type: "info",
            message: "已取消删除"
          });
        });
    },
    Seach_user() {
      //查询
      this.getuserlistpage();
    }
  },
  mounted() {
    this.getrolelist();
    this.getuserlistpage();
  }
};
</script>
<style lang="scss" scoped>
</style>
<style>
.adduserform .el-input__inner {
  width: 178px;
}
</style>
